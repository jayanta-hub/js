"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _1 = require(".");
/**
 * Removes all the keys from an object for which the value is empty.
 * @param {object} data - The object that may contain empty properties.
 * @returns {object} - An object with all the empty properties removed.
 */
function removeEmptyProperty(data = {}) {
    function removeEmptyProperties(obj) {
        let result;
        if (Array.isArray(obj)) {
            result = [];
            for (const ele of obj) {
                const d = removeEmptyProperties(ele);
                if (!(0, _1.isEmpty)(d))
                    result.push(d);
            }
            return result;
        }
        else if ((0, _1.isObj)(obj)) {
            result = {};
            for (const key in obj) {
                if (!(0, _1.isEmpty)(obj[key])) {
                    result[key] = removeEmptyProperties(obj[key]);
                }
            }
            return (0, _1.isEmpty)(result) ? null : result;
        }
        else
            return obj;
    }
    // Create a deep copy of the data object
    const _data = JSON.parse(JSON.stringify(data));
    // Remove empty properties recursively
    return removeEmptyProperties(_data);
}
exports.default = removeEmptyProperty;
