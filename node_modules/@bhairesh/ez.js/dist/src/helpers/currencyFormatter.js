"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Converts a number into a formatted currency value.
 *
 * @param {number} val - The number to be formatted as currency.
 * @param {NumberFormatOptions} options - An object with some or all of the properties of Intl.NumberFormatOptions.
 * @returns {string} - The formatted value as a string.
 *
 * @example
 * console.log(currencyFormatter(1234567890.1997)); // â‚¹1,23,45,67,890.20
 * console.log(currencyFormatter(1234567890, {locales: "en-US", currency: "USD", maximumFractionDigits: 0})); // $1,234,567,890
 *
 * @link Reference - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options
 */
function currencyFormatter(val, options = {}) {
    var _a;
    options = Object.assign({ currency: "INR", style: "currency", maximumFractionDigits: 2, locales: (_a = options === null || options === void 0 ? void 0 : options.locales) !== null && _a !== void 0 ? _a : "en-IN" }, options);
    return new Intl.NumberFormat(options.locales, options).format(val);
}
exports.default = currencyFormatter;
