"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const hasOwnProperty_1 = __importDefault(require("./hasOwnProperty"));
const isObj_1 = __importDefault(require("./isObj"));
/**
 * Uses deep merge way to merge objects.
 *
 * @param {object} obj1 - The first object to be merged.
 * @param {object} obj2 - The second object to be merged.
 * @returns {object} - The merged object containing the combined properties of obj1 and obj2.
 */
function mergeObjects(obj1, obj2) {
    const o1 = Object.assign({}, obj1);
    const o2 = Object.assign({}, obj2);
    for (const key in o1) {
        if ((0, hasOwnProperty_1.default)(o1, key, true)) {
            if (Array.isArray(o2[key]) && Array.isArray(o1[key])) {
                o2[key] = [...o1[key], ...o2[key]];
                continue;
            }
            if ((0, isObj_1.default)(o2[key]) && (0, isObj_1.default)(o1[key])) {
                o2[key] = mergeObjects(o1[key], o2[key]);
                continue;
            }
            o2[key] = o1[key];
        }
    }
    return o2;
}
exports.default = mergeObjects;
